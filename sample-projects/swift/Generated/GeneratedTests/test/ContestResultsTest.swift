/**
 * ContestResults.swift
 *
 * Generated by JSON Model Generator v0.0.4 on Aug 13, 2016
 * https://github.com/intere/generator-json-models
 *
 * The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
 */

import XCTest
@testable import Generated

class ContestResultsTest: XCTestCase {

    override func setUp() {
        super.setUp()
    }

    override func tearDown() {
        super.tearDown()
    }
}

// MARK: - order Tests

extension ContestResultsTest {

    func testOrderFromMap() {
        guard let model = ContestResults.fromMap(["order": 5286517721671703552]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertEqual(5286517721671703552, model.order, "The order is incorrect")
    }

    func testOrderFromEmptyMap() {
        guard let model = ContestResults.fromMap([:]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNil(model.order, "The order is not nil")
    }
}

// MARK: - sponsor Tests

extension ContestResultsTest {

    func testSponsorFromMap() {
        guard let model = ContestResults.fromMap(["sponsor":[:]]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNotNil(model.sponsor, "The sponsor is nil")
    }

    func testSponsorFromEmptyMap() {
        guard let model = ContestResults.fromMap([:]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNil(model.sponsor, "The sponsor is not nil")
    }
}

// MARK: - summary Tests

extension ContestResultsTest {

    func testSummaryFromMap() {
        guard let model = ContestResults.fromMap(["summary":[:]]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNotNil(model.summary, "The summary is nil")
    }

    func testSummaryFromEmptyMap() {
        guard let model = ContestResults.fromMap([:]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNil(model.summary, "The summary is not nil")
    }
}

// MARK: - trackId Tests

extension ContestResultsTest {

    func testTrackIdFromMap() {
        guard let model = ContestResults.fromMap(["trackId": "The things you used to own, now they own you."]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertEqual("The things you used to own, now they own you.", model.trackId, "The trackId is incorrect")
    }

    func testTrackIdFromEmptyMap() {
        guard let model = ContestResults.fromMap([:]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNil(model.trackId, "The trackId is not nil")
    }
}

// MARK: - userId Tests

extension ContestResultsTest {

    func testUserIdFromMap() {
        guard let model = ContestResults.fromMap(["userId": "I look at God behind his desk, taking notes on a pad, but God’s got this all wrong."]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertEqual("I look at God behind his desk, taking notes on a pad, but God’s got this all wrong.", model.userId, "The userId is incorrect")
    }

    func testUserIdFromEmptyMap() {
        guard let model = ContestResults.fromMap([:]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNil(model.userId, "The userId is not nil")
    }
}

// MARK: - winner Tests

extension ContestResultsTest {

    func testWinnerFromMap() {
        guard let model = ContestResults.fromMap(["winner": false]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertEqual(false, model.winner, "The winner is incorrect")
    }

    func testWinnerFromEmptyMap() {
        guard let model = ContestResults.fromMap([:]) else {
            XCTFail("The ContestResults was nil")
            return
        }

        XCTAssertNil(model.winner, "The winner is not nil")
    }
}

