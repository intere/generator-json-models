/**
 * EnumerationSkillLevelsTest.swift
 *
 * Generated by JSON Model Generator v0.0.5 on Aug 28, 2016
 * https://github.com/intere/generator-json-models
 *
 * The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
 */

import XCTest
@testable import Generated

class EnumerationSkillLevelsTest: XCTestCase {

    override func setUp() {
        super.setUp()
    }

    override func tearDown() {
        super.tearDown()
    }
}

// MARK: - description Tests

extension EnumerationSkillLevelsTest {

    func testTheDescriptionFromMap() {
        guard let model = EnumerationSkillLevels.fromMap(["description": "You know how they say you only hurt the ones you love? Well, it works both ways."]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertEqual("You know how they say you only hurt the ones you love? Well, it works both ways.", model.theDescription, "The theDescription is incorrect")
    }

    func testTheDescriptionFromEmptyMap() {
        guard let model = EnumerationSkillLevels.fromMap([:]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertNil(model.theDescription, "The theDescription is not nil")
    }
}

// MARK: - image Tests

extension EnumerationSkillLevelsTest {

    func testImageFromMap() {
        guard let model = EnumerationSkillLevels.fromMap(["image": "You know how they say you only hurt the ones you love? Well, it works both ways."]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertEqual("You know how they say you only hurt the ones you love? Well, it works both ways.", model.image, "The image is incorrect")
    }

    func testImageFromEmptyMap() {
        guard let model = EnumerationSkillLevels.fromMap([:]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertNil(model.image, "The image is not nil")
    }
}

// MARK: - name Tests

extension EnumerationSkillLevelsTest {

    func testNameFromMap() {
        guard let model = EnumerationSkillLevels.fromMap(["name": "I wanted to destroy everything beautiful I'd never have."]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertEqual("I wanted to destroy everything beautiful I'd never have.", model.name, "The name is incorrect")
    }

    func testNameFromEmptyMap() {
        guard let model = EnumerationSkillLevels.fromMap([:]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertNil(model.name, "The name is not nil")
    }
}

// MARK: - value Tests

extension EnumerationSkillLevelsTest {

    func testValueFromMap() {
        guard let model = EnumerationSkillLevels.fromMap(["value": 4366799411903564800]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertEqual(4366799411903564800, model.value, "The value is incorrect")
    }

    func testValueFromEmptyMap() {
        guard let model = EnumerationSkillLevels.fromMap([:]) else {
            XCTFail("The EnumerationSkillLevels was nil")
            return
        }

        XCTAssertNil(model.value, "The value is not nil")
    }
}

