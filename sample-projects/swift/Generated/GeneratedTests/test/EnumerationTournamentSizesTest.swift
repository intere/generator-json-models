/**
 * EnumerationTournamentSizes.swift
 *
 * Generated by JSON Model Generator v0.0.4 on Aug 12, 2016
 * https://github.com/intere/generator-json-models
 *
 * The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
 */

import XCTest
@testable import Generated

class EnumerationTournamentSizesTest: XCTestCase {

    override func setUp() {
        super.setUp()
    }

    override func tearDown() {
        super.tearDown()
    }
}

// MARK: - name Tests

extension EnumerationTournamentSizesTest {

    func testNameFromMap() {
        guard let model = EnumerationTournamentSizes.fromMap(["name": "We've all been raised on television to believe that one day we'd all be millionaires, and movie gods, and rock stars. But we won't. And we're slowly learning that fact. And we're very, very pissed off."]) else {
            XCTFail("The EnumerationTournamentSizes was nil")
            return
        }

        XCTAssertEqual("We've all been raised on television to believe that one day we'd all be millionaires, and movie gods, and rock stars. But we won't. And we're slowly learning that fact. And we're very, very pissed off.", model.name, "The name is incorrect")
    }

    func testNameFromEmptyMap() {
        guard let model = EnumerationTournamentSizes.fromMap([:]) else {
            XCTFail("The EnumerationTournamentSizes was nil")
            return
        }

        XCTAssertNil(model.name, "The name is not nil")
    }
}

// MARK: - size Tests

extension EnumerationTournamentSizesTest {

    func testSizeFromMap() {
        guard let model = EnumerationTournamentSizes.fromMap(["size": 2494068678151026688]) else {
            XCTFail("The EnumerationTournamentSizes was nil")
            return
        }

        XCTAssertEqual(2494068678151026688, model.size, "The size is incorrect")
    }

    func testSizeFromEmptyMap() {
        guard let model = EnumerationTournamentSizes.fromMap([:]) else {
            XCTFail("The EnumerationTournamentSizes was nil")
            return
        }

        XCTAssertNil(model.size, "The size is not nil")
    }
}

