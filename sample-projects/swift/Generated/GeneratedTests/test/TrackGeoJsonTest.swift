/**
 * TrackGeoJsonTest.swift
 *
 * Generated by JSON Model Generator v0.0.5 on Aug 28, 2016
 * https://github.com/intere/generator-json-models
 *
 * The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
 */

import XCTest
@testable import Generated

class TrackGeoJsonTest: XCTestCase {

    override func setUp() {
        super.setUp()
    }

    override func tearDown() {
        super.tearDown()
    }
}

// MARK: - coordinates Tests

extension TrackGeoJsonTest {

    func testCoordinatesFromMap() {
        let arrayData = [[1.068411111614799E308, 4.339922462210477E307], [7.460143028975711E307, 8.694033120420983E307]]  // Array of 2 empty objects
        guard let model = TrackGeoJson.fromMap(["coordinates": arrayData ]) else {
            XCTFail("The TrackGeoJson was nil")
            return
        }

        XCTAssertNotNil(model.coordinates, "The coordinates was nil")
        XCTAssertEqual(2, model.coordinates?.count, "The coordinates has the wrong number of objects")
    }

    func testCoordinatesFromEmptyMap() {
        guard let model = TrackGeoJson.fromMap([:]) else {
            XCTFail("The TrackGeoJson was nil")
            return
        }

        XCTAssertNil(model.coordinates, "The coordinates is not nil")
    }
}

// MARK: - type Tests

extension TrackGeoJsonTest {

    func testTypeFromMap() {
        guard let model = TrackGeoJson.fromMap(["type": "I look at God behind his desk, taking notes on a pad, but God’s got this all wrong."]) else {
            XCTFail("The TrackGeoJson was nil")
            return
        }

        XCTAssertEqual("I look at God behind his desk, taking notes on a pad, but God’s got this all wrong.", model.type, "The type is incorrect")
    }

    func testTypeFromEmptyMap() {
        guard let model = TrackGeoJson.fromMap([:]) else {
            XCTFail("The TrackGeoJson was nil")
            return
        }

        XCTAssertNil(model.type, "The type is not nil")
    }
}

