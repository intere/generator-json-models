#
# ${filename}
#
# Generated by JSON Model Generator v${version} on ${date?date}
# https://github.com/intere/generator-json-models
#
# The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
#

class ${model.className}

    <#list properties as property>
    def ${property.alias}
        <#switch property.dataType>
            <#case "CLASS">
        @${property.alias} ||= ${property.type}.new json.try(:[], :${property.name})
            <#break>
            <#case "ARRAY">
                <#switch property.arraySubTypeProperty.dataType>
                <#case "CLASS">
        @${property.alias} ||= json.try(:[], :${property.name}).map {|o| ${property.arraySubTypeProperty.type}.new(o)}
                <#break>
                <#default>
        @${property.alias} ||= json.try(:[], :${property.name})
                <#break>
                </#switch>
            <#break>
            <#default>
        @${property.alias} ||= json.try(:[], :${property.name})
            <#break>
        </#switch>
    end

    </#list>

    def initialize(init_json)
        if init_json.class == String
            @json = JSON.parse(init_json)
        else
            @json = init_json
        end
        @json.symbolize_keys!
    end

    def json
        @json
    end
end
