//
//  MetadataClassesTest
//
//  Generated by JSON Model Generator v0.0.3 on Mon Feb 23 08:50:21 MST 2015.
//    https://github.com/intere/generator-json-models
//
//    The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
//
//

package com.intere.generator.metadata;

import static org.junit.Assert.*;

import java.io.IOException;
import java.io.InputStream;

import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.junit.Before;
import org.junit.Test;

public class MetadataClassesTest {

	private static final ObjectMapper jsonMapper = new ObjectMapper();
	private MetadataClasses metadataClasses;

	@Before
	public void setUp() throws JsonParseException, JsonMappingException, IOException {
		InputStream in = getClass().getResourceAsStream("/com/intere/generator/metadata/metadata_classes.json");
		metadataClasses = jsonMapper.readValue(in, MetadataClasses.class);
	}

	@Test
	public void testClassName() {
		assertEquals("The className property didn't deserialize properly", "Contest", metadataClasses.getClassName());
	}

	@Test
	public void testJsonFile() {
		assertEquals("The jsonFile property didn't deserialize properly", "contest.json", metadataClasses.getJsonFile());
	}

	@Test
	public void testKey() {
		assertEquals("The key property didn't deserialize properly", "id", metadataClasses.getKey());
	}

	@Test
	public void testUrlPath() {
		assertEquals("The urlPath property didn't deserialize properly", "/contest", metadataClasses.getUrlPath());
	}

	@Test
	public void testReadonly() {
		assertFalse("The readonly property didn't deserialize properly", metadataClasses.getReadonly());
	}

	@Test
	public void testPropertyMap() {
		// TODO: See MetadataClasses
		// TODO: See MetadataClasses
	}

	@Test
	public void testTransientProperty() {
		// TODO: See MetadataClasses
	}


}
